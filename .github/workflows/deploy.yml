name: Deploy Containerized NestJS App

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "**.md"
      - ".github/workflows/**"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version
        id: meta
        run: |
          VERSION="${GITHUB_SHA::7}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

  deploy-ssh:
    name: Deploy to server via SSH
    needs: build-and-push
    if: ${{ secrets.SSH_HOST && secrets.SSH_USER && secrets.SSH_PRIVATE_KEY && secrets.GHCR_PAT }}
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: SSH and deploy container
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          GHCR_IMAGE: ghcr.io/${{ github.repository }}:latest
          APP_NAME: stick-note
          APP_PORT: 3000
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          ssh -o StrictHostKeyChecking=yes ${SSH_USER}@${SSH_HOST} "\
            set -e; \
            echo '${GHCR_PAT}' | docker login ghcr.io -u '${GITHUB_ACTOR}' --password-stdin; \
            docker pull ${GHCR_IMAGE}; \
            docker stop ${APP_NAME} || true; \
            docker rm ${APP_NAME} || true; \
            docker run -d --restart unless-stopped --name ${APP_NAME} -p ${APP_PORT}:3000 ${GHCR_IMAGE}; \
            docker image prune -f; \
          "
        shell: bash
